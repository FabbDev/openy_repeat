<?php //$Id
$yahoo_appID = 'P0X_MvPV34G1GH8DRzmzcUq_JFGz90muOAtqQYCSj2VFwBOwPoJylo_V2XUw69_2PA--';

/**
 * @file
 *
 * @todo: make gmap address input it's own element.
 */


function geolocation_gmap_help($section) {
}



function geolocation_gmap_widget_info() {
  return array(
    'geolocation_gmap_address' => array(
       'label' => 'Google Geocoded Address',
       'field types' => array('geolocation'),
    ),
/*
    'geolocation_gmap_map' => array(
       'label' => 'Google Map',
       'field types' => array('geolocation'),
    ),
*/
  );  
}

function geolocation_gmap_widget_settings($op, $widget) {
  switch($op) {
    case 'callback':
      return array('default value' => CONTENT_CALLBACK_CUSTOM);

    case 'form':
      $form = array();
      return $form;

    case 'validate':
      break;
  
    case 'save': 
      return array('');
  }
}

function geolocation_gmap_widget($op, $node, $field, &$items) {
  $fieldname = $field['field_name'];
  $op = $field['widget']['type'] .'/'. $op;
  switch($op) {
    case 'geolocation_gmap_address/form':
      $form[$fieldname] = array(
        '#type' => 'fieldset',
        '#title' => $field['widget']['label'],
        '#weight' => $field['widget']['weight'],
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
        '#tree' => TRUE,
      );

      // if we got items, put em in the form.
      foreach($items as $delta => $item) {
        $form[$fieldname][$delta] = geolocation_gmap_address_form($item);
      }   
      // if we're a multiple field add an extra element, if we're a single value add a new form.
      if ($field['multiple'] || !isset($form[$fieldname][0])) {
        $form[$fieldname][count($items)] = geolocation_gmap_address_form();
      }   
      return $form;

    case 'geolocation_gmap_address/validate':
      foreach ($items as $delta => $item) {
        if (!empty($item['source'])) {
          $geo = gmap_geocode($item['source']);
          if ($geo['status'] != 200) {
            form_set_error($field['field_name'] .']['. $delta .'][source', t('Unable to geocode address.'));
          }
          else {
            form_set_value(array('#parents' => array($field['field_name'], $delta, 'longitude')), $geo['longitude']);
            form_set_value(array('#parents' => array($field['field_name'], $delta, 'latitude')), $geo['latitude']);
          }
        }
      }
      //drupal_set_message('validate');
      break;

    case 'geolocation_gmap_address/process form values':
      foreach ($items as $delta => $item) {
        // Don't save empty values, beyond the first value.
        if ($item['source'] == '' && $item['longitude'] == '' && $item['latitude'] == '' && $delta > 0) {
          unset($items[$delta]);
        }
      }
      break;
  }
}

function geolocation_gmap_address_form($item = array()) {
  $form = array();
  $form['source'] = array(
    '#type' => 'textfield',
    '#title' => t('Location'),
    '#description' => t('A free-form address input.'),
    '#default_value' => $item['source'],
  );

  if (isset($item['latitude'])) {
    $form['latitude'] = array(
      '#type' => 'value',
      '#value' => $item['latitude'],
    );
  }
  if (isset($item['longitude'])) {
    $form['longitude'] = array(
      '#type' => 'value',
      '#value' => $item['longitude'],
    );
  }
  return $form;
}

function geolocation_gmap_field_formatter_info() {
  $formatters = array(
    'geolocation_gmap' => array(
      'label' => 'Google Map',
      'field types' => array('geolocation'),
    ),
  );
  return $formatters;
}

function geolocation_gmap_field_formatter($field, $item, $formatter) {
  switch($formatter) {
    case 'geolocation_gmap':
      return theme('geolocation_gmap',  $item, $field);

  }
}

function theme_geolocation_gmap($item = array(), $field) {
 
  $settings['id'] = gmap_get_auto_mapid();
  $settings['longitude'] = $item['longitude'];
  $settings['latitude'] = $item['latitude'];
  $settings['zoom'] = 'auto'; 

  $settings['markers'][] = array(
    'latitude' => $item['latitude'],
    'longitude' => $item['longitude'],
    'offset' => $delta,
  );

  return theme('gmap', array('#settings' => $settings));
}

