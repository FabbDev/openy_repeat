<?php
// $Id$

/**
 * @file
 * Google Maps widget and formaters for Geolocation.
 */

/**
 * Implements hook_field_formatter_info().
 */
function geolocation_googlemaps_field_formatter_info() {
  return array(
    'geolocation_googlemaps_static' => array(
      'label' => t('Static Google Map'),
      'field types' => array('geolocation_latlng'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function geolocation_googlemaps_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {

    case 'geolocation_googlemaps_static':
      foreach ($items as $delta => $item) {
        $variables = array(
            'path' => 'http://maps.google.com/maps/api/staticmap?zoom=7&size=300x300&maptype=roadmap&markers=size:mid|color:red|' . $item['lat'] . ',' . $item['lng'] . '&sensor=false',
            'alt' => 'Geolocation',
            'attributes' => array('class' => 'geolocation-googlemaps-static'),
            );
        $map_img = theme('image', $variables);
        $element[$delta]['#markup'] = '<div>' . $map_img . '</div>';
      }
      break;

  }
  return $element;
}

/**
 * Implements hook_field_widget_info().
 */
function geolocation_googlemaps_field_widget_info() {
  return array(
    'geolocation_googlemap' => array(
      'label' => t('Google Map'),
      'field types' => array('geolocation_latlng'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function geolocation_googlemaps_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $lat_value = isset($items[$delta]['lat']) ? $items[$delta]['lat'] : '';
  $lng_value = isset($items[$delta]['lng']) ? $items[$delta]['lng'] : '';
  $element += array(
    '#delta' => $delta,
  );
  $element['lat'] = array();
  $element['lng'] = array();
  $element['googlemap'] = array();

  switch ($instance['widget']['type']) {

    case 'geolocation_googlemap':
      $element['lat'] += array(
        '#type' => 'hidden',
        '#attributes' => array('class' => 'geolocation-lat'),
        '#default_value' => $lat_value,
        '#maxlength' => 30,
      );
      $element['lng'] += array(
        '#type' => 'hidden',
        '#attributes' => array('class' => 'geolocation-lng'),
        '#default_value' => $lng_value,
        '#maxlength' => 30,
      );
      // TODO: check input alternatives. TODO: Use delta!
      $element['address'] = array(
        '#type' => 'textfield',
        '#title' => 'Geolocation',
        '#prefix' => '<div id="address">',
        '#suffix' => '</div>',
        '#attributes' => array('class' => array('geolocation-input')),
        '#maxlength' => 120,
        '#weight' => -5,
        '#description' => t('Enter an address / location in the textfield above. You can also click on the map to set a marker'),
      );
      // Copied from Google examples:
      // http://demos.projectx.co.nz/gmaps3/reverse_geocoder.html
      $element['googlemap'] = array(
        '#type' => 'markup',
        '#markup' => '
          <div id="map" style="width:100%;height:400px;"></div>
        ',
        /*
        // Hide debug output, cleanup later. 
        '#markup' => '
            <div id="map" style="width:100%;height:400px;"></div>
            <div>
              <span id ="lat"></span><br />
              <span id ="lng"></span><br />
              <div id="geocode_info"></div>
            </div>
        ',
        */
      );

      // Attach CSS and JS files via FAPI '#attached'.
      $element['googlemap']['#attached']['css'][] = drupal_get_path('module', 'geolocation_googlemaps') . '/geolocation_googlemaps.css';
      $element['googlemap']['#attached']['js'][] = array('data' => 'http://maps.google.com/maps/api/js?sensor=false', 'type' => 'external');
      $element['googlemap']['#attached']['js'][] = array('data' => 'http://www.google.com/jsapi', 'type' => 'external');
      $element['googlemap']['#attached']['js'][] = array(
        'data' => drupal_get_path('module', 'geolocation_googlemaps') . '/geolocation_googlemaps.js',
        'type' => 'file',
        'scope' => 'footer'
      );

      // Make defaults available as javascript settings. In JS files use:
      // Drupal.settings.map_defaults.lat
      // TODO: better defaults.
      $map_defaults_lat = ($lat_value == '') ? 49.9148115245017 : $lat_value;
      $map_defaults_lng = ($lng_value == '') ? 10.8783125877381 : $lng_value;
      $map_defaults = array(
        'lat' => $map_defaults_lat,
        'lng' => $map_defaults_lng
      );
      $element['googlemap']['#attached']['js'][] = array('data' => array('map_defaults' => $map_defaults), 'type' => 'setting');

      break;
  }
  return $element;
}


/**
 * Implements hook_field_widget_error().
 */
function geolocation_googlemaps_field_widget_error($element, $error, $form, &$form_state) {
  switch ($error['error']) {
    case 'geolocation_invalid':
      form_error($element, $error['message']);
      break;
  }
}
